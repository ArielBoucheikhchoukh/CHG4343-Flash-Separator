import java.lang.CloneNotSupportedException;

public abstract class Correlation extends BoundedFunction implements Cloneable {
  
  private double[] C; // Constants to be used with the evaluate() and evaluateDerivative() methods
  private int form; // Denotes the form of the correlation; varies with the species.
  
  
  /**********************************************************************************************************************
    * 1.1) Constructor A
    * ---------------------------------------------------------------------------------------------------------------------
    */
  public Correlation(String id) {
    super(id, Double.MIN_VALUE, Double.MAX_VALUE);
  }
  /*********************************************************************************************************************/
  
  
  /**********************************************************************************************************************
    * 1.2) Constructor B
    * ---------------------------------------------------------------------------------------------------------------------
    */
  public Correlation(String id, double minX, double maxX) {
    super(id, minX, maxX);
    this.C = null;
    this.form = 0;
  }
  /*********************************************************************************************************************/
  
  
  /**********************************************************************************************************************
    * 1.3) Constructor C
    * ---------------------------------------------------------------------------------------------------------------------
    */
  public Correlation(String id, double[] C, double minX, double maxX, int form) {
    super(id, minX, maxX);
    this.C = C.clone();
    this.form = form;
  }
  /*********************************************************************************************************************/
  
  
  /**********************************************************************************************************************
    * 2) Copy Constructor
    * ---------------------------------------------------------------------------------------------------------------------
    */
  public Correlation(Correlation source) {
    super(source);
    this.C = source.C.clone();
    this.form = source.form;
  }
  /*********************************************************************************************************************/
  
  
  /**********************************************************************************************************************
    * 3) clone()
    * ---------------------------------------------------------------------------------------------------------------------
    */
  public abstract Correlation clone();
  /*********************************************************************************************************************/
  
  
  /**********************************************************************************************************************
    * 4) evaluateWithinBounds()
    * ---------------------------------------------------------------------------------------------------------------------
    */
  protected abstract double evaluateWithinBounds(double x, double[] constants);
  /*********************************************************************************************************************/
  
  /**********************************************************************************************************************
    * 5) evaluateDerivativeWithinBounds()
    * ---------------------------------------------------------------------------------------------------------------------
    */
  protected abstract double evaluateDerivativeWithinBounds(double x, double[] constants);
  /*********************************************************************************************************************/
  
  
  /**********************************************************************************************************************
    * 6) getConstantCount()
    * ---------------------------------------------------------------------------------------------------------------------
    */
  public abstract int getConstantCount();
  /*********************************************************************************************************************/
  
  
  /**********************************************************************************************************************
    * 7) setParameters()
    * ---------------------------------------------------------------------------------------------------------------------
    */
  public void setParameters(double[] C, double minX, double maxX, int form) {
    this.C = C.clone();
    super.setMinX(minX);
    super.setMaxX(maxX);
    this.form = form;
  }
  /*********************************************************************************************************************/
  
  
  protected double[] getC() {
    return this.C.clone();
  }
  
  protected void setC(double[] C) {
    this.C = C.clone();
  }
  
  protected int getForm() {
    return this.form;
  }
  
  protected void setForm(int form) {
    this.form = form;
  }
  
}